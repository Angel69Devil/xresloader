// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_header.proto

#ifndef PROTOBUF_pb_5fheader_2eproto__INCLUDED
#define PROTOBUF_pb_5fheader_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace owent {
namespace xresloader {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pb_5fheader_2eproto();
void protobuf_AssignDesc_pb_5fheader_2eproto();
void protobuf_ShutdownFile_pb_5fheader_2eproto();

class xresloader_header;
class xresloader_datablocks;

// ===================================================================

class xresloader_header : public ::google::protobuf::Message {
 public:
  xresloader_header();
  virtual ~xresloader_header();

  xresloader_header(const xresloader_header& from);

  inline xresloader_header& operator=(const xresloader_header& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const xresloader_header& default_instance();

  void Swap(xresloader_header* other);

  // implements Message ----------------------------------------------

  xresloader_header* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const xresloader_header& from);
  void MergeFrom(const xresloader_header& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string xres_ver = 1;
  inline bool has_xres_ver() const;
  inline void clear_xres_ver();
  static const int kXresVerFieldNumber = 1;
  inline const ::std::string& xres_ver() const;
  inline void set_xres_ver(const ::std::string& value);
  inline void set_xres_ver(const char* value);
  inline void set_xres_ver(const char* value, size_t size);
  inline ::std::string* mutable_xres_ver();
  inline ::std::string* release_xres_ver();
  inline void set_allocated_xres_ver(::std::string* xres_ver);

  // required string data_ver = 2;
  inline bool has_data_ver() const;
  inline void clear_data_ver();
  static const int kDataVerFieldNumber = 2;
  inline const ::std::string& data_ver() const;
  inline void set_data_ver(const ::std::string& value);
  inline void set_data_ver(const char* value);
  inline void set_data_ver(const char* value, size_t size);
  inline ::std::string* mutable_data_ver();
  inline ::std::string* release_data_ver();
  inline void set_allocated_data_ver(::std::string* data_ver);

  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required string hash_code = 4;
  inline bool has_hash_code() const;
  inline void clear_hash_code();
  static const int kHashCodeFieldNumber = 4;
  inline const ::std::string& hash_code() const;
  inline void set_hash_code(const ::std::string& value);
  inline void set_hash_code(const char* value);
  inline void set_hash_code(const char* value, size_t size);
  inline ::std::string* mutable_hash_code();
  inline ::std::string* release_hash_code();
  inline void set_allocated_hash_code(::std::string* hash_code);

  // @@protoc_insertion_point(class_scope:com.owent.xresloader.pb.xresloader_header)
 private:
  inline void set_has_xres_ver();
  inline void clear_has_xres_ver();
  inline void set_has_data_ver();
  inline void clear_has_data_ver();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_hash_code();
  inline void clear_has_hash_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* xres_ver_;
  ::std::string* data_ver_;
  ::std::string* hash_code_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_pb_5fheader_2eproto();
  friend void protobuf_AssignDesc_pb_5fheader_2eproto();
  friend void protobuf_ShutdownFile_pb_5fheader_2eproto();

  void InitAsDefaultInstance();
  static xresloader_header* default_instance_;
};
// -------------------------------------------------------------------

class xresloader_datablocks : public ::google::protobuf::Message {
 public:
  xresloader_datablocks();
  virtual ~xresloader_datablocks();

  xresloader_datablocks(const xresloader_datablocks& from);

  inline xresloader_datablocks& operator=(const xresloader_datablocks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const xresloader_datablocks& default_instance();

  void Swap(xresloader_datablocks* other);

  // implements Message ----------------------------------------------

  xresloader_datablocks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const xresloader_datablocks& from);
  void MergeFrom(const xresloader_datablocks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.owent.xresloader.pb.xresloader_header header = 1;
  inline bool has_header() const;
  inline void clear_header();
  static const int kHeaderFieldNumber = 1;
  inline const ::com::owent::xresloader::pb::xresloader_header& header() const;
  inline ::com::owent::xresloader::pb::xresloader_header* mutable_header();
  inline ::com::owent::xresloader::pb::xresloader_header* release_header();
  inline void set_allocated_header(::com::owent::xresloader::pb::xresloader_header* header);

  // repeated bytes data_block = 2;
  inline int data_block_size() const;
  inline void clear_data_block();
  static const int kDataBlockFieldNumber = 2;
  inline const ::std::string& data_block(int index) const;
  inline ::std::string* mutable_data_block(int index);
  inline void set_data_block(int index, const ::std::string& value);
  inline void set_data_block(int index, const char* value);
  inline void set_data_block(int index, const void* value, size_t size);
  inline ::std::string* add_data_block();
  inline void add_data_block(const ::std::string& value);
  inline void add_data_block(const char* value);
  inline void add_data_block(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& data_block() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_data_block();

  // @@protoc_insertion_point(class_scope:com.owent.xresloader.pb.xresloader_datablocks)
 private:
  inline void set_has_header();
  inline void clear_has_header();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::owent::xresloader::pb::xresloader_header* header_;
  ::google::protobuf::RepeatedPtrField< ::std::string> data_block_;
  friend void  protobuf_AddDesc_pb_5fheader_2eproto();
  friend void protobuf_AssignDesc_pb_5fheader_2eproto();
  friend void protobuf_ShutdownFile_pb_5fheader_2eproto();

  void InitAsDefaultInstance();
  static xresloader_datablocks* default_instance_;
};
// ===================================================================


// ===================================================================

// xresloader_header

// required string xres_ver = 1;
inline bool xresloader_header::has_xres_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void xresloader_header::set_has_xres_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void xresloader_header::clear_has_xres_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void xresloader_header::clear_xres_ver() {
  if (xres_ver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xres_ver_->clear();
  }
  clear_has_xres_ver();
}
inline const ::std::string& xresloader_header::xres_ver() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_header.xres_ver)
  return *xres_ver_;
}
inline void xresloader_header::set_xres_ver(const ::std::string& value) {
  set_has_xres_ver();
  if (xres_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xres_ver_ = new ::std::string;
  }
  xres_ver_->assign(value);
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_header.xres_ver)
}
inline void xresloader_header::set_xres_ver(const char* value) {
  set_has_xres_ver();
  if (xres_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xres_ver_ = new ::std::string;
  }
  xres_ver_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.owent.xresloader.pb.xresloader_header.xres_ver)
}
inline void xresloader_header::set_xres_ver(const char* value, size_t size) {
  set_has_xres_ver();
  if (xres_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xres_ver_ = new ::std::string;
  }
  xres_ver_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.owent.xresloader.pb.xresloader_header.xres_ver)
}
inline ::std::string* xresloader_header::mutable_xres_ver() {
  set_has_xres_ver();
  if (xres_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xres_ver_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_header.xres_ver)
  return xres_ver_;
}
inline ::std::string* xresloader_header::release_xres_ver() {
  clear_has_xres_ver();
  if (xres_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = xres_ver_;
    xres_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void xresloader_header::set_allocated_xres_ver(::std::string* xres_ver) {
  if (xres_ver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete xres_ver_;
  }
  if (xres_ver) {
    set_has_xres_ver();
    xres_ver_ = xres_ver;
  } else {
    clear_has_xres_ver();
    xres_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.owent.xresloader.pb.xresloader_header.xres_ver)
}

// required string data_ver = 2;
inline bool xresloader_header::has_data_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void xresloader_header::set_has_data_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void xresloader_header::clear_has_data_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void xresloader_header::clear_data_ver() {
  if (data_ver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ver_->clear();
  }
  clear_has_data_ver();
}
inline const ::std::string& xresloader_header::data_ver() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_header.data_ver)
  return *data_ver_;
}
inline void xresloader_header::set_data_ver(const ::std::string& value) {
  set_has_data_ver();
  if (data_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ver_ = new ::std::string;
  }
  data_ver_->assign(value);
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_header.data_ver)
}
inline void xresloader_header::set_data_ver(const char* value) {
  set_has_data_ver();
  if (data_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ver_ = new ::std::string;
  }
  data_ver_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.owent.xresloader.pb.xresloader_header.data_ver)
}
inline void xresloader_header::set_data_ver(const char* value, size_t size) {
  set_has_data_ver();
  if (data_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ver_ = new ::std::string;
  }
  data_ver_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.owent.xresloader.pb.xresloader_header.data_ver)
}
inline ::std::string* xresloader_header::mutable_data_ver() {
  set_has_data_ver();
  if (data_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ver_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_header.data_ver)
  return data_ver_;
}
inline ::std::string* xresloader_header::release_data_ver() {
  clear_has_data_ver();
  if (data_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_ver_;
    data_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void xresloader_header::set_allocated_data_ver(::std::string* data_ver) {
  if (data_ver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_ver_;
  }
  if (data_ver) {
    set_has_data_ver();
    data_ver_ = data_ver;
  } else {
    clear_has_data_ver();
    data_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.owent.xresloader.pb.xresloader_header.data_ver)
}

// required uint32 count = 3;
inline bool xresloader_header::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void xresloader_header::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void xresloader_header::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void xresloader_header::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 xresloader_header::count() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_header.count)
  return count_;
}
inline void xresloader_header::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_header.count)
}

// required string hash_code = 4;
inline bool xresloader_header::has_hash_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void xresloader_header::set_has_hash_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void xresloader_header::clear_has_hash_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void xresloader_header::clear_hash_code() {
  if (hash_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hash_code_->clear();
  }
  clear_has_hash_code();
}
inline const ::std::string& xresloader_header::hash_code() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_header.hash_code)
  return *hash_code_;
}
inline void xresloader_header::set_hash_code(const ::std::string& value) {
  set_has_hash_code();
  if (hash_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hash_code_ = new ::std::string;
  }
  hash_code_->assign(value);
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_header.hash_code)
}
inline void xresloader_header::set_hash_code(const char* value) {
  set_has_hash_code();
  if (hash_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hash_code_ = new ::std::string;
  }
  hash_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.owent.xresloader.pb.xresloader_header.hash_code)
}
inline void xresloader_header::set_hash_code(const char* value, size_t size) {
  set_has_hash_code();
  if (hash_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hash_code_ = new ::std::string;
  }
  hash_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.owent.xresloader.pb.xresloader_header.hash_code)
}
inline ::std::string* xresloader_header::mutable_hash_code() {
  set_has_hash_code();
  if (hash_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hash_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_header.hash_code)
  return hash_code_;
}
inline ::std::string* xresloader_header::release_hash_code() {
  clear_has_hash_code();
  if (hash_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = hash_code_;
    hash_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void xresloader_header::set_allocated_hash_code(::std::string* hash_code) {
  if (hash_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hash_code_;
  }
  if (hash_code) {
    set_has_hash_code();
    hash_code_ = hash_code;
  } else {
    clear_has_hash_code();
    hash_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.owent.xresloader.pb.xresloader_header.hash_code)
}

// -------------------------------------------------------------------

// xresloader_datablocks

// required .com.owent.xresloader.pb.xresloader_header header = 1;
inline bool xresloader_datablocks::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void xresloader_datablocks::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void xresloader_datablocks::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void xresloader_datablocks::clear_header() {
  if (header_ != NULL) header_->::com::owent::xresloader::pb::xresloader_header::Clear();
  clear_has_header();
}
inline const ::com::owent::xresloader::pb::xresloader_header& xresloader_datablocks::header() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_datablocks.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::com::owent::xresloader::pb::xresloader_header* xresloader_datablocks::mutable_header() {
  set_has_header();
  if (header_ == NULL) header_ = new ::com::owent::xresloader::pb::xresloader_header;
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_datablocks.header)
  return header_;
}
inline ::com::owent::xresloader::pb::xresloader_header* xresloader_datablocks::release_header() {
  clear_has_header();
  ::com::owent::xresloader::pb::xresloader_header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void xresloader_datablocks::set_allocated_header(::com::owent::xresloader::pb::xresloader_header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:com.owent.xresloader.pb.xresloader_datablocks.header)
}

// repeated bytes data_block = 2;
inline int xresloader_datablocks::data_block_size() const {
  return data_block_.size();
}
inline void xresloader_datablocks::clear_data_block() {
  data_block_.Clear();
}
inline const ::std::string& xresloader_datablocks::data_block(int index) const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  return data_block_.Get(index);
}
inline ::std::string* xresloader_datablocks::mutable_data_block(int index) {
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  return data_block_.Mutable(index);
}
inline void xresloader_datablocks::set_data_block(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  data_block_.Mutable(index)->assign(value);
}
inline void xresloader_datablocks::set_data_block(int index, const char* value) {
  data_block_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline void xresloader_datablocks::set_data_block(int index, const void* value, size_t size) {
  data_block_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline ::std::string* xresloader_datablocks::add_data_block() {
  return data_block_.Add();
}
inline void xresloader_datablocks::add_data_block(const ::std::string& value) {
  data_block_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline void xresloader_datablocks::add_data_block(const char* value) {
  data_block_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline void xresloader_datablocks::add_data_block(const void* value, size_t size) {
  data_block_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
xresloader_datablocks::data_block() const {
  // @@protoc_insertion_point(field_list:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  return data_block_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
xresloader_datablocks::mutable_data_block() {
  // @@protoc_insertion_point(field_mutable_list:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  return &data_block_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace xresloader
}  // namespace owent
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pb_5fheader_2eproto__INCLUDED
