// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dependency.proto

#ifndef PROTOBUF_dependency_2eproto__INCLUDED
#define PROTOBUF_dependency_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "dep_level2.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dependency_2eproto();
void protobuf_AssignDesc_dependency_2eproto();
void protobuf_ShutdownFile_dependency_2eproto();

class dep_cfg;

// ===================================================================

class dep_cfg : public ::google::protobuf::MessageLite {
 public:
  dep_cfg();
  virtual ~dep_cfg();

  dep_cfg(const dep_cfg& from);

  inline dep_cfg& operator=(const dep_cfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const dep_cfg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const dep_cfg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(dep_cfg* other);

  // implements Message ----------------------------------------------

  dep_cfg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const dep_cfg& from);
  void MergeFrom(const dep_cfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .dep2_cfg dep2 = 3;
  inline bool has_dep2() const;
  inline void clear_dep2();
  static const int kDep2FieldNumber = 3;
  inline const ::dep2_cfg& dep2() const;
  inline ::dep2_cfg* mutable_dep2();
  inline ::dep2_cfg* release_dep2();
  inline void set_allocated_dep2(::dep2_cfg* dep2);

  // @@protoc_insertion_point(class_scope:dep_cfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_dep2();
  inline void clear_has_dep2();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::dep2_cfg* dep2_;
  ::google::protobuf::uint32 id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_dependency_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_dependency_2eproto();
  #endif
  friend void protobuf_AssignDesc_dependency_2eproto();
  friend void protobuf_ShutdownFile_dependency_2eproto();

  void InitAsDefaultInstance();
  static dep_cfg* default_instance_;
};
// ===================================================================


// ===================================================================

// dep_cfg

// required uint32 id = 1;
inline bool dep_cfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dep_cfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dep_cfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dep_cfg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 dep_cfg::id() const {
  // @@protoc_insertion_point(field_get:dep_cfg.id)
  return id_;
}
inline void dep_cfg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:dep_cfg.id)
}

// required string name = 2;
inline bool dep_cfg::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dep_cfg::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dep_cfg::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dep_cfg::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& dep_cfg::name() const {
  // @@protoc_insertion_point(field_get:dep_cfg.name)
  return *name_;
}
inline void dep_cfg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:dep_cfg.name)
}
inline void dep_cfg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dep_cfg.name)
}
inline void dep_cfg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dep_cfg.name)
}
inline ::std::string* dep_cfg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dep_cfg.name)
  return name_;
}
inline ::std::string* dep_cfg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void dep_cfg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dep_cfg.name)
}

// optional .dep2_cfg dep2 = 3;
inline bool dep_cfg::has_dep2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dep_cfg::set_has_dep2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dep_cfg::clear_has_dep2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dep_cfg::clear_dep2() {
  if (dep2_ != NULL) dep2_->::dep2_cfg::Clear();
  clear_has_dep2();
}
inline const ::dep2_cfg& dep_cfg::dep2() const {
  // @@protoc_insertion_point(field_get:dep_cfg.dep2)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dep2_ != NULL ? *dep2_ : *default_instance().dep2_;
#else
  return dep2_ != NULL ? *dep2_ : *default_instance_->dep2_;
#endif
}
inline ::dep2_cfg* dep_cfg::mutable_dep2() {
  set_has_dep2();
  if (dep2_ == NULL) dep2_ = new ::dep2_cfg;
  // @@protoc_insertion_point(field_mutable:dep_cfg.dep2)
  return dep2_;
}
inline ::dep2_cfg* dep_cfg::release_dep2() {
  clear_has_dep2();
  ::dep2_cfg* temp = dep2_;
  dep2_ = NULL;
  return temp;
}
inline void dep_cfg::set_allocated_dep2(::dep2_cfg* dep2) {
  delete dep2_;
  dep2_ = dep2;
  if (dep2) {
    set_has_dep2();
  } else {
    clear_has_dep2();
  }
  // @@protoc_insertion_point(field_set_allocated:dep_cfg.dep2)
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dependency_2eproto__INCLUDED
